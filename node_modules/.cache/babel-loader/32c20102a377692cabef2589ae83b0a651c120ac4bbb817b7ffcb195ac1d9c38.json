{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-79333573\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"input\", {\n    value: $props.value,\n    onInput: _cache[0] || (_cache[0] = (...args) => $options.updateInput && $options.updateInput(...args)),\n    class: \"input\",\n    type: \"text\"\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_1);\n}","map":{"version":3,"names":["_createElementBlock","value","$props","onInput","_cache","args","$options","updateInput","class","type"],"sources":["/home/coder/Vue_js/Entering/src/components/UI/MyInput.vue"],"sourcesContent":["<template>\n    <input :value=\"value\" @input=\"updateInput\" class=\"input\" type=\"text\">\n</template>\n\n<script>\nexport default{\n    name: 'my-input',\n    props: {\n        value: [String, Number],\n        myvalue: [String]\n    },\n    methods: {\n        updateInput(event) {\n            this.$emit('update:value', event.target.value)\n            this.$emit('update:myvalue', event.target.value)\n        }\n    }\n}\n</script>\n\n<style scoped>\n.input {\n    width: 100%;\n    border: 1px solid teal;\n    padding: 10px 15px;\n    margin-top: 15px;\n}\n</style>\n\n"],"mappings":";;;;uBACIA,mBAAA,CAAqE;IAA7DC,KAAK,EAAEC,MAAA,CAAAD,KAAK;IAAGE,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IAAEG,KAAK,EAAC,OAAO;IAACC,IAAI,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}